% 1st fix the null space issue via upsampling... maybe p -> p+1 or p+2
% then compute Nystrom, then downsample to check rank
%
% Hai 07/27/23

clear all

addpath ./spharm/; 

radius = 1/4; % GSMat = radius*GSMat; S.x = radius*S.x; S.w = radius^2*S.w; % that's it

p = 16; % 3d spherical harmonics order
S = mySurfaceSph(p);
p_up = p+1; % upsampled nodes, assume p_up > p
S_up = mySurfaceSph(p_up); % will do 

% build self eval mat (Nystrom on p_up grid)
[SMat_up, SpMat, DMat] = kernelDLap(S_up); % Laplace SLP, SLPn, DLP self eval matrix
shcMat_up = shAna(eye(2*p_up*(p_up+1))); % if even p, then abs(shcMat(end-2*p_up,:) - shcMat(end,:)) is 0, if odd, then + is 0 ...
shvMat_up = shSyn(eye((p_up+1)^2),false);
shcMat_up = shcMat_up(1:(p+1)^2,:); shvMat_up = shvMat_up(:,1:(p+1)^2); % val2coefsMat & coefs2valsMat (on p_up grid)
L_up = interpsh(eye(2*p*(p+1)),p_up); % upsample interpolation matrix
L_down = interpsh(eye(2*p_up*(p_up+1)),p); % downsample matrix
GSMat = shcMat_up*(SMat_up)*shvMat_up; % Galerkin SLP mat on p
shcMat = shcMat_up*L_up;
shvMat = L_down*shvMat_up;

% simple check, value on p_up vs value on p_up -> coeffs on p_up -> truncated coeffs -> value on p_up
y_source.x = radius*[0.1;0.2;-0.3]; y_source.w = 1; pt_source = [1]; % pick a Laplace boundary condition
g_up = Lap3dSLPmat(S_up,y_source)*pt_source;
g_tr = real(shvMat_up*(shcMat_up*g_up)); % truncated coeffs2vals up*(vals2 truncated coeffs(g_up));
max(abs(g_up-g_tr))                % seems like missing a few coefficients of the last order does not matter, for p=12, absolute diff=3e-07, p=16, diff=7e-09, p=24, diff=2e-12

% Dirichlet BVP generated by an interior point source
S.x = radius*S.x; S.w = radius^2*S.w;
Ahom = Lap3dSLPmat(S,y_source);
rhs = Ahom*pt_source; 
g_L = L_up*rhs;
max(abs(g_up-g_L))

% solve
GSMat = radius*GSMat;
mucS = GSMat\(shcMat*rhs(:)); % no null space
% muc to mu (coefs2vals)
muS = real(shvMat*mucS); % imaginary part ~ 1e-17

% verify solution
t.x = [S.x + radius*S.nx, S.x + radius*3/4*S.nx, S.x + radius*1/2*S.nx];
fhom = Lap3dSLPmat(t,y_source)*pt_source;
fnumS = Lap3dSLPmat(t,S)*muS;
errS = abs(fnumS-fhom)/max(abs(fhom));

%
figure(2),clf,
scatter3(t.x(1,:),t.x(2,:),t.x(3,:),10,log10(errS),'filled');
colorbar, axis equal, hold on
surf(reshape(S.x(1,:),S.p+1,[]),reshape(S.x(2,:),S.p+1,[]),reshape(S.x(3,:),S.p+1,[]))
caxis([-12 0])
title(['Galerkin SLP p=' num2str(S.p) ', ' num2str((S.p+1)^2) 'x' num2str((S.p+1)^2) ', rank ' num2str(rank(GSMat)) ', max err ' num2str(max(errS))], 'FontSize', 16)


keyboard
